# Build Stage for Spring boot application image
FROM openjdk:8-jdk-alpine as build

MAINTAINER Rui Pinho
# Build Stage for Spring boot application image
FROM openjdk:8-jdk-alpine as build

RUN mkdir/app

WORKDIR /app

COPY mvnw .
COPY .mvn .mvn
COPY pom.xml .

RUN chmod +x ./mvnw
# download the dependency if needed or if the pom file is changed
RUN ./mvnw dependency:go-offline -B

COPY src src

RUN ./mvnw package -DskipTests
RUN mkdir -p target/dependency && (cd target/dependency; jar -xf ../*.jar)

# Production Stage for Spring boot application image
FROM openjdk:8-jre-alpine as production

ARG DEPENDENCY=/app/target/dependency

# Copy the dependency application file from build stage artifact
COPY --from=build ${DEPENDENCY}/lib /app/lib
COPY --from=build ${DEPENDENCY}/META-INF /app/META-INF
COPY --from=build ${DEPENDENCY}/classes /app

# Run the Spring boot application
ENTRYPOINT ["java", "-cp", "app:app/*","com.family.families.FamiliesApplication"]


### uncomment and use this setup in case the one above doesn't work#######
#FROM openjdk:8-jdk-alpine

#ADD /target/families-0.0.1-SNAPSHOT.jar app.jar

#ENTRYPOINT ["java", "-jar", "app.jar"]

#EXPOSE 8080
